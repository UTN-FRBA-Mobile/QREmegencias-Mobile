/*
 * QR Emergencias WS
 * API Rest QR Emergencias
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.qre.models;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.qre.models.UserContactDTO;


import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import android.os.Parcelable;
import android.os.Parcel;

/**
 * UserProfileDTO
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-09-10T21:22:21.097-03:00")
public class UserProfileDTO implements Parcelable {
  @SerializedName("birthDate")
  private OffsetDateTime birthDate = null;

  @SerializedName("contacts")
  private List<UserContactDTO> contacts = null;

  @SerializedName("firstName")
  private String firstName = null;

  @SerializedName("idNumber")
  private String idNumber = null;

  @SerializedName("lastName")
  private String lastName = null;

  @SerializedName("sex")
  private String sex = null;

  public UserProfileDTO birthDate(OffsetDateTime birthDate) {
    this.birthDate = birthDate;
    return this;
  }

   /**
   * Get birthDate
   * @return birthDate
  **/

  public OffsetDateTime getBirthDate() {
    return birthDate;
  }

  public void setBirthDate(OffsetDateTime birthDate) {
    this.birthDate = birthDate;
  }

  public UserProfileDTO contacts(List<UserContactDTO> contacts) {
    this.contacts = contacts;
    return this;
  }

  public UserProfileDTO addContactsItem(UserContactDTO contactsItem) {
    if (this.contacts == null) {
      this.contacts = new ArrayList<UserContactDTO>();
    }
    this.contacts.add(contactsItem);
    return this;
  }

   /**
   * Get contacts
   * @return contacts
  **/

  public List<UserContactDTO> getContacts() {
    return contacts;
  }

  public void setContacts(List<UserContactDTO> contacts) {
    this.contacts = contacts;
  }

  public UserProfileDTO firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

   /**
   * Get firstName
   * @return firstName
  **/

  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }

  public UserProfileDTO idNumber(String idNumber) {
    this.idNumber = idNumber;
    return this;
  }

   /**
   * Get idNumber
   * @return idNumber
  **/

  public String getIdNumber() {
    return idNumber;
  }

  public void setIdNumber(String idNumber) {
    this.idNumber = idNumber;
  }

  public UserProfileDTO lastName(String lastName) {
    this.lastName = lastName;
    return this;
  }

   /**
   * Get lastName
   * @return lastName
  **/

  public String getLastName() {
    return lastName;
  }

  public void setLastName(String lastName) {
    this.lastName = lastName;
  }

  public UserProfileDTO sex(String sex) {
    this.sex = sex;
    return this;
  }

   /**
   * Get sex
   * @return sex
  **/

  public String getSex() {
    return sex;
  }

  public void setSex(String sex) {
    this.sex = sex;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserProfileDTO userProfileDTO = (UserProfileDTO) o;
    return Objects.equals(this.birthDate, userProfileDTO.birthDate) &&
        Objects.equals(this.contacts, userProfileDTO.contacts) &&
        Objects.equals(this.firstName, userProfileDTO.firstName) &&
        Objects.equals(this.idNumber, userProfileDTO.idNumber) &&
        Objects.equals(this.lastName, userProfileDTO.lastName) &&
        Objects.equals(this.sex, userProfileDTO.sex);
  }

  @Override
  public int hashCode() {
    return Objects.hash(birthDate, contacts, firstName, idNumber, lastName, sex);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserProfileDTO {\n");
    
    sb.append("    birthDate: ").append(toIndentedString(birthDate)).append("\n");
    sb.append("    contacts: ").append(toIndentedString(contacts)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    idNumber: ").append(toIndentedString(idNumber)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    sex: ").append(toIndentedString(sex)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
  public void writeToParcel(Parcel out, int flags) {
     
    out.writeValue(birthDate);

    out.writeValue(contacts);

    out.writeValue(firstName);

    out.writeValue(idNumber);

    out.writeValue(lastName);

    out.writeValue(sex);
  }

  public UserProfileDTO() {
    super();
  }

  UserProfileDTO(Parcel in) {
    
    birthDate = (OffsetDateTime)in.readValue(OffsetDateTime.class.getClassLoader());
    contacts = (List<UserContactDTO>)in.readValue(UserContactDTO.class.getClassLoader());
    firstName = (String)in.readValue(null);
    idNumber = (String)in.readValue(null);
    lastName = (String)in.readValue(null);
    sex = (String)in.readValue(null);
  }
  
  public int describeContents() {
    return 0;
  }

  public static final Creator<UserProfileDTO> CREATOR = new Creator<UserProfileDTO>() {
    public UserProfileDTO createFromParcel(Parcel in) {
      return new UserProfileDTO(in);
    }
    public UserProfileDTO[] newArray(int size) {
      return new UserProfileDTO[size];
    }
  };
}

