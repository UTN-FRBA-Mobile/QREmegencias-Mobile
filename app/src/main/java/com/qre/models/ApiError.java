/*
 * QR Emergencias WS
 * API Rest QR Emergencias
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.qre.models;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.qre.models.ApiFieldError;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import android.os.Parcelable;
import android.os.Parcel;

import org.threeten.bp.OffsetDateTime;

/**
 * ApiError
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-09-10T21:22:21.097-03:00")
public class ApiError implements Parcelable {
  @SerializedName("code")
  private Integer code = null;

  @SerializedName("errors")
  private List<ApiFieldError> errors = null;

  @SerializedName("message")
  private String message = null;

  @SerializedName("status")
  private Integer status = null;

  @SerializedName("timestamp")
  private OffsetDateTime timestamp = null;

  public ApiError code(Integer code) {
    this.code = code;
    return this;
  }

   /**
   * Get code
   * @return code
  **/
  public Integer getCode() {
    return code;
  }

  public void setCode(Integer code) {
    this.code = code;
  }

  public ApiError errors(List<ApiFieldError> errors) {
    this.errors = errors;
    return this;
  }

  public ApiError addErrorsItem(ApiFieldError errorsItem) {
    if (this.errors == null) {
      this.errors = new ArrayList<ApiFieldError>();
    }
    this.errors.add(errorsItem);
    return this;
  }

   /**
   * Get errors
   * @return errors
  **/
  public List<ApiFieldError> getErrors() {
    return errors;
  }

  public void setErrors(List<ApiFieldError> errors) {
    this.errors = errors;
  }

  public ApiError message(String message) {
    this.message = message;
    return this;
  }

   /**
   * Get message
   * @return message
  **/

  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }

  public ApiError status(Integer status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/

  public Integer getStatus() {
    return status;
  }

  public void setStatus(Integer status) {
    this.status = status;
  }

  public ApiError timestamp(OffsetDateTime timestamp) {
    this.timestamp = timestamp;
    return this;
  }

   /**
   * Get timestamp
   * @return timestamp
  **/

  public OffsetDateTime getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(OffsetDateTime timestamp) {
    this.timestamp = timestamp;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiError apiError = (ApiError) o;
    return Objects.equals(this.code, apiError.code) &&
        Objects.equals(this.errors, apiError.errors) &&
        Objects.equals(this.message, apiError.message) &&
        Objects.equals(this.status, apiError.status) &&
        Objects.equals(this.timestamp, apiError.timestamp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(code, errors, message, status, timestamp);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiError {\n");
    
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    errors: ").append(toIndentedString(errors)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
  public void writeToParcel(Parcel out, int flags) {
     
    out.writeValue(code);

    out.writeValue(errors);

    out.writeValue(message);

    out.writeValue(status);

    out.writeValue(timestamp);
  }

  public ApiError() {
    super();
  }

  ApiError(Parcel in) {
    
    code = (Integer)in.readValue(null);
    errors = (List<ApiFieldError>)in.readValue(ApiFieldError.class.getClassLoader());
    message = (String)in.readValue(null);
    status = (Integer)in.readValue(null);
    timestamp = (OffsetDateTime)in.readValue(OffsetDateTime.class.getClassLoader());
  }
  
  public int describeContents() {
    return 0;
  }

  public static final Creator<ApiError> CREATOR = new Creator<ApiError>() {
    public ApiError createFromParcel(Parcel in) {
      return new ApiError(in);
    }
    public ApiError[] newArray(int size) {
      return new ApiError[size];
    }
  };
}

