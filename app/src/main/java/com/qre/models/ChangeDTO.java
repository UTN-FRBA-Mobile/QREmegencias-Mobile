/*
 * QR Emergencias WS
 * API Rest QR Emergencias
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.qre.models;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;


import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import android.os.Parcelable;
import android.os.Parcel;

/**
 * ChangeDTO
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-09-10T21:22:21.097-03:00")
public class ChangeDTO implements Parcelable {
  @SerializedName("added")
  private List<String> added = null;

  @SerializedName("newValue")
  private Object newValue = null;

  @SerializedName("oldValue")
  private Object oldValue = null;

  @SerializedName("property")
  private String property = null;

  @SerializedName("removed")
  private List<String> removed = null;

  public ChangeDTO added(List<String> added) {
    this.added = added;
    return this;
  }

  public ChangeDTO addAddedItem(String addedItem) {
    if (this.added == null) {
      this.added = new ArrayList<String>();
    }
    this.added.add(addedItem);
    return this;
  }

   /**
   * Get added
   * @return added
  **/

  public List<String> getAdded() {
    return added;
  }

  public void setAdded(List<String> added) {
    this.added = added;
  }

  public ChangeDTO newValue(Object newValue) {
    this.newValue = newValue;
    return this;
  }

   /**
   * Get newValue
   * @return newValue
  **/

  public Object getNewValue() {
    return newValue;
  }

  public void setNewValue(Object newValue) {
    this.newValue = newValue;
  }

  public ChangeDTO oldValue(Object oldValue) {
    this.oldValue = oldValue;
    return this;
  }

   /**
   * Get oldValue
   * @return oldValue
  **/

  public Object getOldValue() {
    return oldValue;
  }

  public void setOldValue(Object oldValue) {
    this.oldValue = oldValue;
  }

  public ChangeDTO property(String property) {
    this.property = property;
    return this;
  }

   /**
   * Get property
   * @return property
  **/

  public String getProperty() {
    return property;
  }

  public void setProperty(String property) {
    this.property = property;
  }

  public ChangeDTO removed(List<String> removed) {
    this.removed = removed;
    return this;
  }

  public ChangeDTO addRemovedItem(String removedItem) {
    if (this.removed == null) {
      this.removed = new ArrayList<String>();
    }
    this.removed.add(removedItem);
    return this;
  }

   /**
   * Get removed
   * @return removed
  **/

  public List<String> getRemoved() {
    return removed;
  }

  public void setRemoved(List<String> removed) {
    this.removed = removed;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChangeDTO changeDTO = (ChangeDTO) o;
    return Objects.equals(this.added, changeDTO.added) &&
        Objects.equals(this.newValue, changeDTO.newValue) &&
        Objects.equals(this.oldValue, changeDTO.oldValue) &&
        Objects.equals(this.property, changeDTO.property) &&
        Objects.equals(this.removed, changeDTO.removed);
  }

  @Override
  public int hashCode() {
    return Objects.hash(added, newValue, oldValue, property, removed);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChangeDTO {\n");
    
    sb.append("    added: ").append(toIndentedString(added)).append("\n");
    sb.append("    newValue: ").append(toIndentedString(newValue)).append("\n");
    sb.append("    oldValue: ").append(toIndentedString(oldValue)).append("\n");
    sb.append("    property: ").append(toIndentedString(property)).append("\n");
    sb.append("    removed: ").append(toIndentedString(removed)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
  public void writeToParcel(Parcel out, int flags) {
     
    out.writeValue(added);

    out.writeValue(newValue);

    out.writeValue(oldValue);

    out.writeValue(property);

    out.writeValue(removed);
  }

  public ChangeDTO() {
    super();
  }

  ChangeDTO(Parcel in) {
    
    added = (List<String>)in.readValue(null);
    newValue = (Object)in.readValue(null);
    oldValue = (Object)in.readValue(null);
    property = (String)in.readValue(null);
    removed = (List<String>)in.readValue(null);
  }
  
  public int describeContents() {
    return 0;
  }

  public static final Creator<ChangeDTO> CREATOR = new Creator<ChangeDTO>() {
    public ChangeDTO createFromParcel(Parcel in) {
      return new ChangeDTO(in);
    }
    public ChangeDTO[] newArray(int size) {
      return new ChangeDTO[size];
    }
  };
}

